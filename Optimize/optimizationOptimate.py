from scipy.optimize import linprog	 # подключение библиотеки для работы скрипта
import time # подключение библиотеки для работы таймера
start = time.time() # старт таймера
c = [10, 26, 39,  7,  27, 
     19, 11, 24,  8,  12, 
     44, 14, 12,  33, 15,
     36, 33, 7,   25, 5,
      4, 32, 13,  23, 3] # коэффициенты целевой функции
b_ub = [40,15,7,10,8] #  правая часть ограничений – верхних границ
A_ub = [[1,1,1,1,1, 0,0,0,0,0, 0,0,0,0,0 ,0,0,0,0,0 ,0,0,0,0,0],
        [0,0,0,0,0, 1,1,1,1,1, 0,0,0,0,0 ,0,0,0,0,0 ,0,0,0,0,0],
        [0,0,0,0,0, 0,0,0,0,0, 1,1,1,1,1 ,0,0,0,0,0 ,0,0,0,0,0],
        [0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 ,1,1,1,1,1 ,0,0,0,0,0],
        [0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 ,0,0,0,0,0 ,1,1,1,1,1]] #двумерный массив ndarray (или список списков) с коэффициентами ограничений –верхних границ («≤»);
b_eq = [10,8,40,20,1] # правая часть ограничений равенства;
A_eq = [[1,0,0,0,0, 1,0,0,0,0,  1,0,0,0,0, 1,0,0,0,0, 1,0,0,0,0 ],
        [0,1,0,0,0, 0,1,0,0,0,  0,1,0,0,0, 0,1,0,0,0, 0,1,0,0,0 ],
        [0,0,1,0,0, 0,0,1,0,0,  0,0,1,0,0, 0,0,1,0,0, 0,0,1,0,0],
        [0,0,0,1,0, 0,0,0,1,0,  0,0,0,1,0, 0,0,0,1,0, 0,0,0,1,0],
        [0,0,0,0,1, 0,0,0,0,1,  0,0,0,0,1, 0,0,0,0,1, 0,0,0,0,1]] # двумерный массив ndarray (или список списков) с коэффициентами ограничений равенства;
print(linprog(c, A_ub, b_ub, A_eq,  b_eq)) 
stop = time.time()
print ("Время :")
print(stop - start)
